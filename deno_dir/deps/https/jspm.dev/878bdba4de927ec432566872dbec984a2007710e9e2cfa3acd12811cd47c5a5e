import './is-array-buffer@3.23.0!cjs';
import * as _buffer2 from '../npm:@jspm/core@2/nodelibs/buffer';
import * as utilBufferFrom_3_23_0_cjs from './util-buffer-from@3.23.0!cjs';
import utilBufferFrom_3_23_0_cjs__default from './util-buffer-from@3.23.0!cjs';
import * as _crypto2 from '../npm:@jspm/core@2/nodelibs/crypto';

var _utilBufferFrom2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.assign(/*#__PURE__*/Object.create(null), utilBufferFrom_3_23_0_cjs, {
  [Symbol.toStringTag]: 'Module',
  'default': utilBufferFrom_3_23_0_cjs__default
}));

var _utilBufferFrom = "default" in _utilBufferFrom2 ? utilBufferFrom_3_23_0_cjs__default : _utilBufferFrom2;

var _buffer = "default" in _buffer2 ? _buffer2.default : _buffer2;

var _crypto = "default" in _crypto2 ? _crypto2.default : _crypto2;

var exports = {};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hash = void 0;
const util_buffer_from_1 = _utilBufferFrom;
const buffer_1 = _buffer;
const crypto_1 = _crypto;

class Hash {
  constructor(algorithmIdentifier, secret) {
    this.hash = secret ? crypto_1.createHmac(algorithmIdentifier, castSourceData(secret)) : crypto_1.createHash(algorithmIdentifier);
  }

  update(toHash, encoding) {
    this.hash.update(castSourceData(toHash, encoding));
  }

  digest() {
    return Promise.resolve(this.hash.digest());
  }

}

exports.Hash = Hash;

function castSourceData(toCast, encoding) {
  if (buffer_1.Buffer.isBuffer(toCast)) {
    return toCast;
  }

  if (typeof toCast === "string") {
    return util_buffer_from_1.fromString(toCast, encoding);
  }

  if (ArrayBuffer.isView(toCast)) {
    return util_buffer_from_1.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);
  }

  return util_buffer_from_1.fromArrayBuffer(toCast);
} 
const __esModule = exports.__esModule;
const _Hash = exports.Hash;

export default exports;
export { _Hash as Hash, __esModule };

//# sourceMappingURL=hash-node@3.25.0!cjs.map