function t() {
  return (t = Object.assign || function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var n2 = arguments[e2];
      for (var r2 in n2)
        Object.prototype.hasOwnProperty.call(n2, r2) && (t2[r2] = n2[r2]);
    }
    return t2;
  }).apply(this, arguments);
}
var e = {__proto__: null, default: function(t2, e2) {
  return e2 = e2 || {}, new Promise(function(n2, r2) {
    var o2 = new XMLHttpRequest(), s2 = [], u2 = [], i2 = {}, c2 = function() {
      return {ok: (o2.status / 100 | 0) == 2, statusText: o2.statusText, status: o2.status, url: o2.responseURL, text: function() {
        return Promise.resolve(o2.responseText);
      }, json: function() {
        return Promise.resolve(o2.responseText).then(JSON.parse);
      }, blob: function() {
        return Promise.resolve(new Blob([o2.response]));
      }, clone: c2, headers: {keys: function() {
        return s2;
      }, entries: function() {
        return u2;
      }, get: function(t3) {
        return i2[t3.toLowerCase()];
      }, has: function(t3) {
        return t3.toLowerCase() in i2;
      }}};
    };
    for (var a in o2.open(e2.method || "get", t2, true), o2.onload = function() {
      o2.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(t3, e3, n3) {
        s2.push(e3 = e3.toLowerCase()), u2.push([e3, n3]), i2[e3] = i2[e3] ? i2[e3] + "," + n3 : n3;
      }), n2(c2());
    }, o2.onerror = r2, o2.withCredentials = e2.credentials == "include", e2.headers)
      o2.setRequestHeader(a, e2.headers[a]);
    o2.send(e2.body || null);
  });
}}, n = self.fetch || (self.fetch = e.default || e);
class r {
  constructor(t2) {
    this.accessToken = void 0, this.apiEnv = void 0, this.accessToken = t2.accessToken, this.apiEnv = t2.apiEnv || "production";
  }
  async request(e2, r3) {
    const o2 = function(t2) {
      switch (t2) {
        case "development":
          return "https://dev-api.truestamp.com/v1/";
        case "staging":
          return "https://staging-api.truestamp.com/v1/";
        case "":
        case "production":
          return "https://api.truestamp.com/v1/";
        default:
          throw new Error(`invalid environment : '${t2}'`);
      }
    }(this.apiEnv) + e2, s2 = t({}, r3, {headers: {Authorization: "Bearer " + this.accessToken, "Content-type": "application/json", Accept: "application/json"}});
    let u2 = await n(o2, s2);
    if (u2.ok) {
      if (u2.status === 204)
        return new Promise((t2) => {
          t2(JSON.parse("{}"));
        });
      try {
        let t2 = await u2.json();
        return t2.data && Array.isArray(t2.data) ? new Promise((e3) => {
          e3(t2.data);
        }) : new Promise((e3) => {
          e3(t2);
        });
      } catch (t2) {
        throw new Error(t2.message);
      }
    }
    throw new Error(`${u2.status} : ${u2.statusText}`);
  }
}
var o = Object.prototype.hasOwnProperty;
function s(t2) {
  try {
    return encodeURIComponent(t2);
  } catch (t3) {
    return null;
  }
}
var u, i = function(t2, e2) {
  e2 = e2 || "";
  var n2, r2, u2 = [];
  for (r2 in typeof e2 != "string" && (e2 = "?"), t2)
    if (o.call(t2, r2)) {
      if ((n2 = t2[r2]) || n2 != null && !isNaN(n2) || (n2 = ""), r2 = s(r2), n2 = s(n2), r2 === null || n2 === null)
        continue;
      u2.push(r2 + "=" + n2);
    }
  return u2.length ? e2 + u2.join("&") : "";
};
class c extends r {
}
u = c, [class extends r {
  getHeartbeat() {
    return this.request("heartbeat");
  }
}, class extends r {
  createDocument(t2) {
    return this.request("documents", {method: "POST", body: JSON.stringify(t2)});
  }
  getAllDocuments(t2) {
    let e2 = "documents";
    return t2 && (e2 += i(t2, true)), this.request(e2);
  }
  getDocument(t2, e2) {
    let n2 = `documents/${t2}`;
    return e2 && (n2 += i(e2, true)), this.request(n2);
  }
  updateDocument(t2, e2) {
    return this.request(`documents/${t2}`, {method: "PUT", body: JSON.stringify(e2)});
  }
  deleteDocument(t2) {
    return this.request(`documents/${t2}`, {method: "DELETE"});
  }
  getDocumentRevisions(t2, e2) {
    let n2 = `documents/${t2}/revisions`;
    return e2 && (n2 += i(e2, true)), this.request(n2);
  }
}, class extends r {
  getToken() {
    return this.request("tokens", {method: "POST", body: null});
  }
}].forEach((t2) => {
  Object.getOwnPropertyNames(t2.prototype).forEach((e2) => {
    Object.defineProperty(u.prototype, e2, Object.getOwnPropertyDescriptor(t2.prototype, e2));
  });
});
export default c;
