// Copyright Â© 2020-2022 Truestamp Inc. All rights reserved.
import { crypto } from "https://deno.land/std@0.145.0/crypto/mod.ts";
import { parse } from "https://deno.land/std@0.145.0/path/mod.ts";
import { copy, readAllSync } from "https://deno.land/std@0.145.0/streams/conversion.ts";
import { sleep } from "https://deno.land/x/sleep@v1.2.1/mod.ts";
import { decode, validate } from "https://deno.land/x/djwt@v2.7/mod.ts";
export { appPaths, colors, Command, CompletionsCommand, Conf, copy, createTruestampClient, crypto, DB, decode, decodeUnsafely, deleteTokensInConfig, EnumType, getAccessTokenWithPrompts, getConfigAccessToken, getConfigForEnv, getConfigIdTokenPayload, getConfigKeyForEnv, getConfigRefreshToken, HelpCommand, parse, readAllSync, setConfigKeyForEnv, sleep, Truestamp, validate, ValidationError, verify };
import { DB } from "https://deno.land/x/sqlite@v3.4.0/mod.ts";
import { colors } from "https://deno.land/x/cliffy@v0.24.2/ansi/colors.ts";
import { CompletionsCommand } from "https://deno.land/x/cliffy@v0.24.2/command/completions/mod.ts";
import { HelpCommand } from "https://deno.land/x/cliffy@v0.24.2/command/help/mod.ts";
import { Command, EnumType, ValidationError } from "https://deno.land/x/cliffy@v0.24.2/command/mod.ts";
import Conf from "https://raw.githubusercontent.com/truestamp/deno-conf/v1.0.6/mod.ts";
import { appPaths } from "https://raw.githubusercontent.com/truestamp/deno-app-paths/v1.1.0/mod.ts";
import { getConfigForEnv, getConfigKeyForEnv, setConfigKeyForEnv } from "./config.ts";
import { deleteTokensInConfig, getAccessTokenWithPrompts, getConfigAccessToken, getConfigIdTokenPayload, getConfigRefreshToken } from "./auth.ts";
// See : https://www.skypack.dev/view/@truestamp/truestamp-js
// See SkyPack : https://docs.skypack.dev/skypack-cdn/api-reference/lookup-urls
import { decodeUnsafely } from "https://cdn.skypack.dev/@truestamp/id@~v1.2.0?dts";
import Truestamp from "https://cdn.skypack.dev/@truestamp/truestamp-js@~v0.12.2?dts";
import { verify } from "https://cdn.skypack.dev/@truestamp/verify@~v0.2.3?dts";
import { createTruestampClient } from "./truestamp.ts";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvZ2xlbm4vc3JjL2dpdGh1Yi5jb20vdHJ1ZXN0YW1wL3RydWVzdGFtcC1jbGkvc3JjL2RlcHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IMKpIDIwMjAtMjAyMiBUcnVlc3RhbXAgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuXG5pbXBvcnQgeyBjcnlwdG8gfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQvc3RkQDAuMTQ1LjAvY3J5cHRvL21vZC50c1wiO1xuaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQvc3RkQDAuMTQ1LjAvcGF0aC9tb2QudHNcIjtcbmltcG9ydCB7XG4gIGNvcHksXG4gIHJlYWRBbGxTeW5jXG59IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC9zdGRAMC4xNDUuMC9zdHJlYW1zL2NvbnZlcnNpb24udHNcIjtcblxuaW1wb3J0IHsgc2xlZXAgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9zbGVlcEB2MS4yLjEvbW9kLnRzXCI7XG5cbmltcG9ydCB7IGRlY29kZSwgdmFsaWRhdGUgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9kand0QHYyLjcvbW9kLnRzXCI7XG5leHBvcnQgdHlwZSB7IElUeXBlSW5mbyB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L2NsaWZmeUB2MC4yNC4yL2ZsYWdzL21vZC50c1wiO1xuZXhwb3J0IHR5cGUgeyBQYXlsb2FkIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvZGp3dEB2Mi43L21vZC50c1wiO1xuZXhwb3J0IHR5cGUgeyBSb3cgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9zcWxpdGVAdjMuNC4wL21vZC50c1wiO1xuZXhwb3J0IHR5cGUge1xuICBKc29uLFxuICBTdG9yZVR5cGVcbn0gZnJvbSBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90cnVlc3RhbXAvZGVuby1jb25mL3YxLjAuNi9tb2QudHNcIjtcbmV4cG9ydCB7XG4gIGFwcFBhdGhzLFxuICBjb2xvcnMsXG4gIENvbW1hbmQsXG4gIENvbXBsZXRpb25zQ29tbWFuZCxcbiAgQ29uZixcbiAgY29weSxcbiAgY3JlYXRlVHJ1ZXN0YW1wQ2xpZW50LFxuICBjcnlwdG8sXG4gIERCLFxuICBkZWNvZGUsXG4gIGRlY29kZVVuc2FmZWx5LFxuICBkZWxldGVUb2tlbnNJbkNvbmZpZyxcbiAgRW51bVR5cGUsXG4gIGdldEFjY2Vzc1Rva2VuV2l0aFByb21wdHMsXG4gIGdldENvbmZpZ0FjY2Vzc1Rva2VuLFxuICBnZXRDb25maWdGb3JFbnYsXG4gIGdldENvbmZpZ0lkVG9rZW5QYXlsb2FkLFxuICBnZXRDb25maWdLZXlGb3JFbnYsXG4gIGdldENvbmZpZ1JlZnJlc2hUb2tlbixcbiAgSGVscENvbW1hbmQsXG4gIHBhcnNlLFxuICByZWFkQWxsU3luYyxcbiAgc2V0Q29uZmlnS2V5Rm9yRW52LFxuICBzbGVlcCxcbiAgVHJ1ZXN0YW1wLFxuICB2YWxpZGF0ZSxcbiAgVmFsaWRhdGlvbkVycm9yLFxuICB2ZXJpZnksXG59O1xuXG5cbmltcG9ydCB7IERCIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvc3FsaXRlQHYzLjQuMC9tb2QudHNcIjtcblxuaW1wb3J0IHsgY29sb3JzIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvY2xpZmZ5QHYwLjI0LjIvYW5zaS9jb2xvcnMudHNcIjtcbmltcG9ydCB7IENvbXBsZXRpb25zQ29tbWFuZCB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L2NsaWZmeUB2MC4yNC4yL2NvbW1hbmQvY29tcGxldGlvbnMvbW9kLnRzXCI7XG5pbXBvcnQgeyBIZWxwQ29tbWFuZCB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L2NsaWZmeUB2MC4yNC4yL2NvbW1hbmQvaGVscC9tb2QudHNcIjtcbmltcG9ydCB7XG4gIENvbW1hbmQsXG4gIEVudW1UeXBlLFxuICBWYWxpZGF0aW9uRXJyb3Jcbn0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvY2xpZmZ5QHYwLjI0LjIvY29tbWFuZC9tb2QudHNcIjtcblxuaW1wb3J0IENvbmYgZnJvbSBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90cnVlc3RhbXAvZGVuby1jb25mL3YxLjAuNi9tb2QudHNcIjtcblxuaW1wb3J0IHsgYXBwUGF0aHMgfSBmcm9tIFwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3RydWVzdGFtcC9kZW5vLWFwcC1wYXRocy92MS4xLjAvbW9kLnRzXCI7XG5cbmltcG9ydCB7XG4gIGdldENvbmZpZ0ZvckVudixcbiAgZ2V0Q29uZmlnS2V5Rm9yRW52LFxuICBzZXRDb25maWdLZXlGb3JFbnZcbn0gZnJvbSBcIi4vY29uZmlnLnRzXCI7XG5cbmltcG9ydCB7XG4gIGRlbGV0ZVRva2Vuc0luQ29uZmlnLFxuICBnZXRBY2Nlc3NUb2tlbldpdGhQcm9tcHRzLFxuICBnZXRDb25maWdBY2Nlc3NUb2tlbixcbiAgZ2V0Q29uZmlnSWRUb2tlblBheWxvYWQsXG4gIGdldENvbmZpZ1JlZnJlc2hUb2tlblxufSBmcm9tIFwiLi9hdXRoLnRzXCI7XG5cbi8vIFNlZSA6IGh0dHBzOi8vd3d3LnNreXBhY2suZGV2L3ZpZXcvQHRydWVzdGFtcC90cnVlc3RhbXAtanNcbi8vIFNlZSBTa3lQYWNrIDogaHR0cHM6Ly9kb2NzLnNreXBhY2suZGV2L3NreXBhY2stY2RuL2FwaS1yZWZlcmVuY2UvbG9va3VwLXVybHNcbmltcG9ydCB7IGRlY29kZVVuc2FmZWx5IH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L0B0cnVlc3RhbXAvaWRAfnYxLjIuMD9kdHNcIjtcbmltcG9ydCBUcnVlc3RhbXAgZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L0B0cnVlc3RhbXAvdHJ1ZXN0YW1wLWpzQH52MC4xMi4yP2R0c1wiO1xuaW1wb3J0IHsgdmVyaWZ5IH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L0B0cnVlc3RhbXAvdmVyaWZ5QH52MC4yLjM/ZHRzXCI7XG5pbXBvcnQgeyBjcmVhdGVUcnVlc3RhbXBDbGllbnQgfSBmcm9tIFwiLi90cnVlc3RhbXAudHNcIjtcblxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE0RDtBQUU1RCxTQUFTLE1BQU0sUUFBUSw2Q0FBNkMsQ0FBQztBQUNyRSxTQUFTLEtBQUssUUFBUSwyQ0FBMkMsQ0FBQztBQUNsRSxTQUNFLElBQUksRUFDSixXQUFXLFFBQ04scURBQXFELENBQUM7QUFFN0QsU0FBUyxLQUFLLFFBQVEseUNBQXlDLENBQUM7QUFFaEUsU0FBUyxNQUFNLEVBQUUsUUFBUSxRQUFRLHNDQUFzQyxDQUFDO0FBUXhFLFNBQ0UsUUFBUSxFQUNSLE1BQU0sRUFDTixPQUFPLEVBQ1Asa0JBQWtCLEVBQ2xCLElBQUksRUFDSixJQUFJLEVBQ0oscUJBQXFCLEVBQ3JCLE1BQU0sRUFDTixFQUFFLEVBQ0YsTUFBTSxFQUNOLGNBQWMsRUFDZCxvQkFBb0IsRUFDcEIsUUFBUSxFQUNSLHlCQUF5QixFQUN6QixvQkFBb0IsRUFDcEIsZUFBZSxFQUNmLHVCQUF1QixFQUN2QixrQkFBa0IsRUFDbEIscUJBQXFCLEVBQ3JCLFdBQVcsRUFDWCxLQUFLLEVBQ0wsV0FBVyxFQUNYLGtCQUFrQixFQUNsQixLQUFLLEVBQ0wsU0FBUyxFQUNULFFBQVEsRUFDUixlQUFlLEVBQ2YsTUFBTSxHQUNOO0FBR0YsU0FBUyxFQUFFLFFBQVEsMENBQTBDLENBQUM7QUFFOUQsU0FBUyxNQUFNLFFBQVEsbURBQW1ELENBQUM7QUFDM0UsU0FBUyxrQkFBa0IsUUFBUSwrREFBK0QsQ0FBQztBQUNuRyxTQUFTLFdBQVcsUUFBUSx3REFBd0QsQ0FBQztBQUNyRixTQUNFLE9BQU8sRUFDUCxRQUFRLEVBQ1IsZUFBZSxRQUNWLG1EQUFtRCxDQUFDO0FBRTNELE9BQU8sSUFBSSxNQUFNLHFFQUFxRSxDQUFDO0FBRXZGLFNBQVMsUUFBUSxRQUFRLDBFQUEwRSxDQUFDO0FBRXBHLFNBQ0UsZUFBZSxFQUNmLGtCQUFrQixFQUNsQixrQkFBa0IsUUFDYixhQUFhLENBQUM7QUFFckIsU0FDRSxvQkFBb0IsRUFDcEIseUJBQXlCLEVBQ3pCLG9CQUFvQixFQUNwQix1QkFBdUIsRUFDdkIscUJBQXFCLFFBQ2hCLFdBQVcsQ0FBQztBQUVuQiw2REFBNkQ7QUFDN0QsK0VBQStFO0FBQy9FLFNBQVMsY0FBYyxRQUFRLG1EQUFtRCxDQUFDO0FBQ25GLE9BQU8sU0FBUyxNQUFNLDhEQUE4RCxDQUFDO0FBQ3JGLFNBQVMsTUFBTSxRQUFRLHVEQUF1RCxDQUFDO0FBQy9FLFNBQVMscUJBQXFCLFFBQVEsZ0JBQWdCLENBQUMifQ==