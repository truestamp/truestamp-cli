// Copyright Â© 2020-2022 Truestamp Inc. All rights reserved.
import { copy, readAllSync } from "https://deno.land/std@0.144.0/streams/conversion.ts";
import { crypto } from "https://deno.land/std@0.144.0/crypto/mod.ts";
import { parse } from "https://deno.land/std@0.144.0/path/mod.ts";
import { sleep } from "https://deno.land/x/sleep@v1.2.1/mod.ts";
import { decode, validate } from "https://deno.land/x/djwt@v2.7/mod.ts";
import { DB } from "https://deno.land/x/sqlite@v3.4.0/mod.ts";
import { colors } from "https://deno.land/x/cliffy@v0.24.2/ansi/colors.ts";
import { Command, EnumType, ValidationError } from "https://deno.land/x/cliffy@v0.24.2/command/mod.ts";
import { HelpCommand } from "https://deno.land/x/cliffy@v0.24.2/command/help/mod.ts";
import { CompletionsCommand } from "https://deno.land/x/cliffy@v0.24.2/command/completions/mod.ts";
import Conf from "https://raw.githubusercontent.com/truestamp/deno-conf/v1.0.6/mod.ts";
import { appPaths } from "https://raw.githubusercontent.com/truestamp/deno-app-paths/v1.1.0/mod.ts";
import { getConfigForEnv, getConfigKeyForEnv, setConfigKeyForEnv } from "./config.ts";
import { deleteTokensInConfig, getAccessTokenWithPrompts, getConfigAccessToken, getConfigIdTokenPayload, getConfigRefreshToken } from "./auth.ts";
// See : https://www.skypack.dev/view/@truestamp/truestamp-js
// See SkyPack : https://docs.skypack.dev/skypack-cdn/api-reference/lookup-urls
import Truestamp from "https://cdn.skypack.dev/@truestamp/truestamp-js@~v0.11.0?dts";
import { createTruestampClient } from "./truestamp.ts";
import { decodeUnsafely } from "https://cdn.skypack.dev/@truestamp/id@~v1.1.7?dts";
import { verify } from "https://cdn.skypack.dev/@truestamp/verify@~v0.0.16?dts";
export { appPaths, colors, Command, CompletionsCommand, Conf, copy, createTruestampClient, crypto, DB, decode, decodeUnsafely, deleteTokensInConfig, EnumType, getAccessTokenWithPrompts, getConfigAccessToken, getConfigForEnv, getConfigIdTokenPayload, getConfigKeyForEnv, getConfigRefreshToken, HelpCommand, parse, readAllSync, setConfigKeyForEnv, sleep, Truestamp, validate, ValidationError, verify };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvZ2xlbm4vc3JjL2dpdGh1Yi5jb20vdHJ1ZXN0YW1wL3RydWVzdGFtcC1jbGkvc3JjL2RlcHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IMKpIDIwMjAtMjAyMiBUcnVlc3RhbXAgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuXG5pbXBvcnQge1xuICBjb3B5LFxuICByZWFkQWxsU3luYyxcbn0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjE0NC4wL3N0cmVhbXMvY29udmVyc2lvbi50c1wiO1xuaW1wb3J0IHsgY3J5cHRvIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjE0NC4wL2NyeXB0by9tb2QudHNcIjtcbmltcG9ydCB7IHBhcnNlIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjE0NC4wL3BhdGgvbW9kLnRzXCI7XG5cbmltcG9ydCB7IHNsZWVwIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvc2xlZXBAdjEuMi4xL21vZC50c1wiO1xuXG5pbXBvcnQgeyBkZWNvZGUsIHZhbGlkYXRlIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvZGp3dEB2Mi43L21vZC50c1wiO1xuZXhwb3J0IHR5cGUgeyBQYXlsb2FkIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3gvZGp3dEB2Mi43L21vZC50c1wiO1xuXG5pbXBvcnQgeyBEQiB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L3NxbGl0ZUB2My40LjAvbW9kLnRzXCI7XG5leHBvcnQgdHlwZSB7IFJvdyB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L3NxbGl0ZUB2My40LjAvbW9kLnRzXCI7XG5cbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L2NsaWZmeUB2MC4yNC4yL2Fuc2kvY29sb3JzLnRzXCI7XG5pbXBvcnQge1xuICBDb21tYW5kLFxuICBFbnVtVHlwZSxcbiAgVmFsaWRhdGlvbkVycm9yLFxufSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9jbGlmZnlAdjAuMjQuMi9jb21tYW5kL21vZC50c1wiO1xuaW1wb3J0IHsgSGVscENvbW1hbmQgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9jbGlmZnlAdjAuMjQuMi9jb21tYW5kL2hlbHAvbW9kLnRzXCI7XG5pbXBvcnQgeyBDb21wbGV0aW9uc0NvbW1hbmQgfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9jbGlmZnlAdjAuMjQuMi9jb21tYW5kL2NvbXBsZXRpb25zL21vZC50c1wiO1xuZXhwb3J0IHR5cGUgeyBJVHlwZUluZm8gfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9jbGlmZnlAdjAuMjQuMi9mbGFncy9tb2QudHNcIjtcblxuaW1wb3J0IENvbmYgZnJvbSBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90cnVlc3RhbXAvZGVuby1jb25mL3YxLjAuNi9tb2QudHNcIjtcbmV4cG9ydCB0eXBlIHtcbiAgSnNvbixcbiAgU3RvcmVUeXBlLFxufSBmcm9tIFwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3RydWVzdGFtcC9kZW5vLWNvbmYvdjEuMC42L21vZC50c1wiO1xuXG5pbXBvcnQgeyBhcHBQYXRocyB9IGZyb20gXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdHJ1ZXN0YW1wL2Rlbm8tYXBwLXBhdGhzL3YxLjEuMC9tb2QudHNcIjtcblxuaW1wb3J0IHtcbiAgZ2V0Q29uZmlnRm9yRW52LFxuICBnZXRDb25maWdLZXlGb3JFbnYsXG4gIHNldENvbmZpZ0tleUZvckVudixcbn0gZnJvbSBcIi4vY29uZmlnLnRzXCI7XG5cbmltcG9ydCB7XG4gIGRlbGV0ZVRva2Vuc0luQ29uZmlnLFxuICBnZXRBY2Nlc3NUb2tlbldpdGhQcm9tcHRzLFxuICBnZXRDb25maWdBY2Nlc3NUb2tlbixcbiAgZ2V0Q29uZmlnSWRUb2tlblBheWxvYWQsXG4gIGdldENvbmZpZ1JlZnJlc2hUb2tlbixcbn0gZnJvbSBcIi4vYXV0aC50c1wiO1xuXG4vLyBTZWUgOiBodHRwczovL3d3dy5za3lwYWNrLmRldi92aWV3L0B0cnVlc3RhbXAvdHJ1ZXN0YW1wLWpzXG4vLyBTZWUgU2t5UGFjayA6IGh0dHBzOi8vZG9jcy5za3lwYWNrLmRldi9za3lwYWNrLWNkbi9hcGktcmVmZXJlbmNlL2xvb2t1cC11cmxzXG5pbXBvcnQgVHJ1ZXN0YW1wIGZyb20gXCJodHRwczovL2Nkbi5za3lwYWNrLmRldi9AdHJ1ZXN0YW1wL3RydWVzdGFtcC1qc0B+djAuMTEuMD9kdHNcIjtcbmltcG9ydCB7IGNyZWF0ZVRydWVzdGFtcENsaWVudCB9IGZyb20gXCIuL3RydWVzdGFtcC50c1wiO1xuaW1wb3J0IHsgZGVjb2RlVW5zYWZlbHkgfSBmcm9tIFwiaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvQHRydWVzdGFtcC9pZEB+djEuMS43P2R0c1wiO1xuaW1wb3J0IHsgdmVyaWZ5IH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L0B0cnVlc3RhbXAvdmVyaWZ5QH52MC4wLjE2P2R0c1wiO1xuXG5leHBvcnQge1xuICBhcHBQYXRocyxcbiAgY29sb3JzLFxuICBDb21tYW5kLFxuICBDb21wbGV0aW9uc0NvbW1hbmQsXG4gIENvbmYsXG4gIGNvcHksXG4gIGNyZWF0ZVRydWVzdGFtcENsaWVudCxcbiAgY3J5cHRvLFxuICBEQixcbiAgZGVjb2RlLFxuICBkZWNvZGVVbnNhZmVseSxcbiAgZGVsZXRlVG9rZW5zSW5Db25maWcsXG4gIEVudW1UeXBlLFxuICBnZXRBY2Nlc3NUb2tlbldpdGhQcm9tcHRzLFxuICBnZXRDb25maWdBY2Nlc3NUb2tlbixcbiAgZ2V0Q29uZmlnRm9yRW52LFxuICBnZXRDb25maWdJZFRva2VuUGF5bG9hZCxcbiAgZ2V0Q29uZmlnS2V5Rm9yRW52LFxuICBnZXRDb25maWdSZWZyZXNoVG9rZW4sXG4gIEhlbHBDb21tYW5kLFxuICBwYXJzZSxcbiAgcmVhZEFsbFN5bmMsXG4gIHNldENvbmZpZ0tleUZvckVudixcbiAgc2xlZXAsXG4gIFRydWVzdGFtcCxcbiAgdmFsaWRhdGUsXG4gIFZhbGlkYXRpb25FcnJvcixcbiAgdmVyaWZ5LFxufTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2REFBNEQ7QUFFNUQsU0FDRSxJQUFJLEVBQ0osV0FBVyxRQUNOLHFEQUFxRCxDQUFDO0FBQzdELFNBQVMsTUFBTSxRQUFRLDZDQUE2QyxDQUFDO0FBQ3JFLFNBQVMsS0FBSyxRQUFRLDJDQUEyQyxDQUFDO0FBRWxFLFNBQVMsS0FBSyxRQUFRLHlDQUF5QyxDQUFDO0FBRWhFLFNBQVMsTUFBTSxFQUFFLFFBQVEsUUFBUSxzQ0FBc0MsQ0FBQztBQUd4RSxTQUFTLEVBQUUsUUFBUSwwQ0FBMEMsQ0FBQztBQUc5RCxTQUFTLE1BQU0sUUFBUSxtREFBbUQsQ0FBQztBQUMzRSxTQUNFLE9BQU8sRUFDUCxRQUFRLEVBQ1IsZUFBZSxRQUNWLG1EQUFtRCxDQUFDO0FBQzNELFNBQVMsV0FBVyxRQUFRLHdEQUF3RCxDQUFDO0FBQ3JGLFNBQVMsa0JBQWtCLFFBQVEsK0RBQStELENBQUM7QUFHbkcsT0FBTyxJQUFJLE1BQU0scUVBQXFFLENBQUM7QUFNdkYsU0FBUyxRQUFRLFFBQVEsMEVBQTBFLENBQUM7QUFFcEcsU0FDRSxlQUFlLEVBQ2Ysa0JBQWtCLEVBQ2xCLGtCQUFrQixRQUNiLGFBQWEsQ0FBQztBQUVyQixTQUNFLG9CQUFvQixFQUNwQix5QkFBeUIsRUFDekIsb0JBQW9CLEVBQ3BCLHVCQUF1QixFQUN2QixxQkFBcUIsUUFDaEIsV0FBVyxDQUFDO0FBRW5CLDZEQUE2RDtBQUM3RCwrRUFBK0U7QUFDL0UsT0FBTyxTQUFTLE1BQU0sOERBQThELENBQUM7QUFDckYsU0FBUyxxQkFBcUIsUUFBUSxnQkFBZ0IsQ0FBQztBQUN2RCxTQUFTLGNBQWMsUUFBUSxtREFBbUQsQ0FBQztBQUNuRixTQUFTLE1BQU0sUUFBUSx3REFBd0QsQ0FBQztBQUVoRixTQUNFLFFBQVEsRUFDUixNQUFNLEVBQ04sT0FBTyxFQUNQLGtCQUFrQixFQUNsQixJQUFJLEVBQ0osSUFBSSxFQUNKLHFCQUFxQixFQUNyQixNQUFNLEVBQ04sRUFBRSxFQUNGLE1BQU0sRUFDTixjQUFjLEVBQ2Qsb0JBQW9CLEVBQ3BCLFFBQVEsRUFDUix5QkFBeUIsRUFDekIsb0JBQW9CLEVBQ3BCLGVBQWUsRUFDZix1QkFBdUIsRUFDdkIsa0JBQWtCLEVBQ2xCLHFCQUFxQixFQUNyQixXQUFXLEVBQ1gsS0FBSyxFQUNMLFdBQVcsRUFDWCxrQkFBa0IsRUFDbEIsS0FBSyxFQUNMLFNBQVMsRUFDVCxRQUFRLEVBQ1IsZUFBZSxFQUNmLE1BQU0sR0FDTiJ9