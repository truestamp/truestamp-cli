import * as path from "https://deno.land/std@0.144.0/path/mod.ts";
const homeDir = Deno.env.get("HOME") || Deno.env.get("HOMEPATH");
const tempDir = Deno.env.get("TEMP") || Deno.env.get("TMP") || Deno.env.get("TMPDIR") || Deno.env.get("RUNNER_TEMP");
function linux(homeDir, tempDir, appName) {
    return {
        cache: path.join(Deno.env.get("XDG_CACHE_HOME") || path.join(homeDir, ".cache"), appName),
        config: path.join(Deno.env.get("XDG_CONFIG_HOME") || path.join(homeDir, ".config"), appName),
        data: path.join(Deno.env.get("XDG_DATA_HOME") || path.join(homeDir, ".local", "share"), appName),
        log: path.join(Deno.env.get("XDG_STATE_HOME") || path.join(homeDir, ".local", "state"), appName),
        temp: path.join(tempDir, path.basename(homeDir), appName)
    };
}
function macos(homeDir, tempDir, appName) {
    const libDir = path.join(homeDir, "Library");
    return {
        cache: path.join(libDir, "Caches", appName),
        config: path.join(libDir, "Preferences", appName),
        data: path.join(libDir, "Application Support", appName),
        log: path.join(libDir, "Logs", appName),
        temp: path.join(tempDir, appName)
    };
}
function windows(homeDir, tempDir, appName) {
    const appData = Deno.env.get("APPDATA") || path.join(homeDir, "AppData", "Roaming");
    const localAppData = Deno.env.get("LOCALAPPDATA") || path.join(homeDir, "AppData", "Local");
    return {
        cache: path.join(localAppData, appName, "Cache"),
        config: path.join(appData, appName, "Config"),
        data: path.join(localAppData, appName, "Data"),
        log: path.join(localAppData, appName, "Log"),
        temp: path.join(tempDir, appName)
    };
}
/** Get paths for storing things like data, config, cache, etc
 *
 * Does not create the directories!
 *
 * @param appName name of your app
 */ export default function appPaths(appName) {
    if (!homeDir) {
        throw new Error("cannot find user home directory");
    }
    if (!tempDir) {
        throw new Error("cannot find temp directory");
    }
    switch(Deno.build.os){
        case "linux":
            return linux(homeDir, tempDir, appName);
        case "darwin":
            return macos(homeDir, tempDir, appName);
        case "windows":
            return windows(homeDir, tempDir, appName);
        default:
            throw new Error("unknown os");
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90cnVlc3RhbXAvZGVuby1hcHAtcGF0aHMvdjEuMS4wL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC9zdGRAMC4xNDQuMC9wYXRoL21vZC50c1wiO1xuXG5jb25zdCBob21lRGlyID0gRGVuby5lbnYuZ2V0KFwiSE9NRVwiKSB8fCBEZW5vLmVudi5nZXQoXCJIT01FUEFUSFwiKTtcblxuY29uc3QgdGVtcERpciA9IERlbm8uZW52LmdldChcIlRFTVBcIikgfHwgRGVuby5lbnYuZ2V0KFwiVE1QXCIpIHx8XG4gIERlbm8uZW52LmdldChcIlRNUERJUlwiKSB8fCBEZW5vLmVudi5nZXQoXCJSVU5ORVJfVEVNUFwiKTtcblxuZXhwb3J0IGludGVyZmFjZSBQYXRocyB7XG4gIGNhY2hlOiBzdHJpbmc7XG4gIGNvbmZpZzogc3RyaW5nO1xuICBkYXRhOiBzdHJpbmc7XG4gIGxvZzogc3RyaW5nO1xuICB0ZW1wOiBzdHJpbmc7XG59XG5cbmZ1bmN0aW9uIGxpbnV4KGhvbWVEaXI6IHN0cmluZywgdGVtcERpcjogc3RyaW5nLCBhcHBOYW1lOiBzdHJpbmcpOiBQYXRocyB7XG4gIHJldHVybiB7XG4gICAgY2FjaGU6IHBhdGguam9pbihcbiAgICAgIERlbm8uZW52LmdldChcIlhER19DQUNIRV9IT01FXCIpIHx8IHBhdGguam9pbihob21lRGlyLCBcIi5jYWNoZVwiKSxcbiAgICAgIGFwcE5hbWUsXG4gICAgKSxcbiAgICBjb25maWc6IHBhdGguam9pbihcbiAgICAgIERlbm8uZW52LmdldChcIlhER19DT05GSUdfSE9NRVwiKSB8fCBwYXRoLmpvaW4oaG9tZURpciwgXCIuY29uZmlnXCIpLFxuICAgICAgYXBwTmFtZSxcbiAgICApLFxuICAgIGRhdGE6IHBhdGguam9pbihcbiAgICAgIERlbm8uZW52LmdldChcIlhER19EQVRBX0hPTUVcIikgfHwgcGF0aC5qb2luKGhvbWVEaXIsIFwiLmxvY2FsXCIsIFwic2hhcmVcIiksXG4gICAgICBhcHBOYW1lLFxuICAgICksXG4gICAgbG9nOiBwYXRoLmpvaW4oXG4gICAgICBEZW5vLmVudi5nZXQoXCJYREdfU1RBVEVfSE9NRVwiKSB8fCBwYXRoLmpvaW4oaG9tZURpciwgXCIubG9jYWxcIiwgXCJzdGF0ZVwiKSxcbiAgICAgIGFwcE5hbWUsXG4gICAgKSxcbiAgICB0ZW1wOiBwYXRoLmpvaW4odGVtcERpciwgcGF0aC5iYXNlbmFtZShob21lRGlyKSwgYXBwTmFtZSksXG4gIH07XG59XG5cbmZ1bmN0aW9uIG1hY29zKGhvbWVEaXI6IHN0cmluZywgdGVtcERpcjogc3RyaW5nLCBhcHBOYW1lOiBzdHJpbmcpOiBQYXRocyB7XG4gIGNvbnN0IGxpYkRpciA9IHBhdGguam9pbihob21lRGlyLCBcIkxpYnJhcnlcIik7XG5cbiAgcmV0dXJuIHtcbiAgICBjYWNoZTogcGF0aC5qb2luKGxpYkRpciwgXCJDYWNoZXNcIiwgYXBwTmFtZSksXG4gICAgY29uZmlnOiBwYXRoLmpvaW4obGliRGlyLCBcIlByZWZlcmVuY2VzXCIsIGFwcE5hbWUpLFxuICAgIGRhdGE6IHBhdGguam9pbihsaWJEaXIsIFwiQXBwbGljYXRpb24gU3VwcG9ydFwiLCBhcHBOYW1lKSxcbiAgICBsb2c6IHBhdGguam9pbihsaWJEaXIsIFwiTG9nc1wiLCBhcHBOYW1lKSxcbiAgICB0ZW1wOiBwYXRoLmpvaW4odGVtcERpciwgYXBwTmFtZSksXG4gIH07XG59XG5cbmZ1bmN0aW9uIHdpbmRvd3MoaG9tZURpcjogc3RyaW5nLCB0ZW1wRGlyOiBzdHJpbmcsIGFwcE5hbWU6IHN0cmluZyk6IFBhdGhzIHtcbiAgY29uc3QgYXBwRGF0YSA9IERlbm8uZW52LmdldChcIkFQUERBVEFcIikgfHxcbiAgICBwYXRoLmpvaW4oaG9tZURpciwgXCJBcHBEYXRhXCIsIFwiUm9hbWluZ1wiKTtcbiAgY29uc3QgbG9jYWxBcHBEYXRhID0gRGVuby5lbnYuZ2V0KFwiTE9DQUxBUFBEQVRBXCIpIHx8XG4gICAgcGF0aC5qb2luKGhvbWVEaXIsIFwiQXBwRGF0YVwiLCBcIkxvY2FsXCIpO1xuXG4gIHJldHVybiB7XG4gICAgY2FjaGU6IHBhdGguam9pbihsb2NhbEFwcERhdGEsIGFwcE5hbWUsIFwiQ2FjaGVcIiksXG4gICAgY29uZmlnOiBwYXRoLmpvaW4oYXBwRGF0YSwgYXBwTmFtZSwgXCJDb25maWdcIiksXG4gICAgZGF0YTogcGF0aC5qb2luKGxvY2FsQXBwRGF0YSwgYXBwTmFtZSwgXCJEYXRhXCIpLFxuICAgIGxvZzogcGF0aC5qb2luKGxvY2FsQXBwRGF0YSwgYXBwTmFtZSwgXCJMb2dcIiksXG4gICAgdGVtcDogcGF0aC5qb2luKHRlbXBEaXIsIGFwcE5hbWUpLFxuICB9O1xufVxuXG4vKiogR2V0IHBhdGhzIGZvciBzdG9yaW5nIHRoaW5ncyBsaWtlIGRhdGEsIGNvbmZpZywgY2FjaGUsIGV0Y1xuICpcbiAqIERvZXMgbm90IGNyZWF0ZSB0aGUgZGlyZWN0b3JpZXMhXG4gKlxuICogQHBhcmFtIGFwcE5hbWUgbmFtZSBvZiB5b3VyIGFwcFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcHBQYXRocyhhcHBOYW1lOiBzdHJpbmcpOiBQYXRocyB7XG4gIGlmICghaG9tZURpcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImNhbm5vdCBmaW5kIHVzZXIgaG9tZSBkaXJlY3RvcnlcIik7XG4gIH1cblxuICBpZiAoIXRlbXBEaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZmluZCB0ZW1wIGRpcmVjdG9yeVwiKTtcbiAgfVxuXG4gIHN3aXRjaCAoRGVuby5idWlsZC5vcykge1xuICAgIGNhc2UgXCJsaW51eFwiOlxuICAgICAgcmV0dXJuIGxpbnV4KGhvbWVEaXIsIHRlbXBEaXIsIGFwcE5hbWUpO1xuICAgIGNhc2UgXCJkYXJ3aW5cIjpcbiAgICAgIHJldHVybiBtYWNvcyhob21lRGlyLCB0ZW1wRGlyLCBhcHBOYW1lKTtcbiAgICBjYXNlIFwid2luZG93c1wiOlxuICAgICAgcmV0dXJuIHdpbmRvd3MoaG9tZURpciwgdGVtcERpciwgYXBwTmFtZSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcInVua25vd24gb3NcIik7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLElBQUksTUFBTSwyQ0FBMkMsQ0FBQztBQUVsRSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQUFBQztBQUVqRSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFDekQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEFBQUM7QUFVeEQsU0FBUyxLQUFLLENBQUMsT0FBZSxFQUFFLE9BQWUsRUFBRSxPQUFlLEVBQVM7SUFDdkUsT0FBTztRQUNMLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLEVBQzlELE9BQU8sQ0FDUjtRQUNELE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUNmLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLEVBQ2hFLE9BQU8sQ0FDUjtRQUNELElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUNiLElBQUks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