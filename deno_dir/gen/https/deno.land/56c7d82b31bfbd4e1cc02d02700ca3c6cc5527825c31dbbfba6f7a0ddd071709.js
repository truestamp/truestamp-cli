import { promisify } from "./_util/_util_promisify.ts";
import { callbackify } from "./_util/_util_callbackify.ts";
import { ERR_INVALID_ARG_TYPE, ERR_OUT_OF_RANGE, errorMap } from "./_errors.ts";
import * as types from "./_util/_util_types.ts";
export { callbackify, promisify, types };
const NumberIsSafeInteger = Number.isSafeInteger;
const DEFAULT_INSPECT_OPTIONS = {
    showHidden: false,
    depth: 2,
    colors: false,
    customInspect: true,
    showProxy: false,
    maxArrayLength: 100,
    maxStringLength: Infinity,
    breakLength: 80,
    compact: 3,
    sorted: false,
    getters: false,
};
inspect.defaultOptions = DEFAULT_INSPECT_OPTIONS;
inspect.custom = Deno.customInspect;
export function inspect(object, ...opts) {
    if (typeof object === "string" && !object.includes("'")) {
        return `'${object}'`;
    }
    opts = { ...DEFAULT_INSPECT_OPTIONS, ...opts };
    return Deno.inspect(object, {
        depth: opts.depth,
        iterableLimit: opts.maxArrayLength,
        compact: !!opts.compact,
        sorted: !!opts.sorted,
        showProxy: !!opts.showProxy,
    });
}
export function isArray(value) {
    return Array.isArray(value);
}
export function isBoolean(value) {
    return typeof value === "boolean" || value instanceof Boolean;
}
export function isNull(value) {
    return value === null;
}
export function isNullOrUndefined(value) {
    return value === null || value === undefined;
}
export function isNumber(value) {
    return typeof value === "number" || value instanceof Number;
}
export function isString(value) {
    return typeof value === "string" || value instanceof String;
}
export function isSymbol(value) {
    return typeof value === "symbol";
}
export function isUndefined(value) {
    return value === undefined;
}
export function isObject(value) {
    return value !== null && typeof value === "object";
}
export function isError(e) {
    return e instanceof Error;
}
export function isFunction(value) {
    return typeof value === "function";
}
export function isRegExp(value) {
    return value instanceof RegExp;
}
export function isPrimitive(value) {
    return (value === null || (typeof value !== "object" && typeof value !== "function"));
}
export function getSystemErrorName(code) {
    if (typeof code !== "number") {
        throw new ERR_INVALID_ARG_TYPE("err", "number", code);
    }
    if (code >= 0 || !NumberIsSafeInteger(code)) {
        throw new ERR_OUT_OF_RANGE("err", "a negative integer", code);
    }
    return errorMap.get(code)?.[0];
}
export function deprecate(fn, msg, _code) {
    return function (...args) {
        console.warn(msg);
        return fn.apply(undefined, args);
    };
}
function circularRemover() {
    const seen = new WeakSet();
    return (_key, value) => {
        if (typeof value === "object" && value !== null) {
            if (seen.has(value)) {
                return;
            }
            seen.add(value);
        }
        return value;
    };
}
function formatString(str) {
    return `"${str.replace(/\\/, "\\\\").replace(/"/g, '\\"')}"`;
}
function thingToString(thing, maxDepth, depth = 1) {
    let result = "";
    if (typeof thing === "bigint") {
        return thing + "n";
    }
    if (typeof thing === "undefined" || typeof thing === "number" ||
        typeof thing === "boolean" || typeof thing === "symbol" || thing === null) {
        return String(thing);
    }
    if (typeof thing === "function") {
        return `[Function ${thing.name || "(anonymous)"}]`;
    }
    if (typeof thing === "string") {
        return formatString(thing);
    }
    if (Array.isArray(thing)) {
        if (depth === maxDepth) {
            return "[Array]";
        }
        result += "[";
        const en = Object.entries(thing);
        for (let i = 0; i < en.length; i++) {
            const [key, value] = en[i];
            if (isNaN(Number(key))) {
                result += `${key}: `;
            }
            result += thingToString(value, maxDepth, depth + 1);
            if (i !== en.length - 1) {
                result += ", ";
            }
        }
        result += "]";
        return result;
    }
    if (depth === maxDepth) {
        return "[Object]";
    }
    const en = Object.entries(thing);
    result += "{ ";
    for (let i = 0; i < en.length; i++) {
        const [key, value] = en[i];
        result += `${key}: ${thingToString(value, maxDepth, depth + 1)}`;
        if (i !== en.length - 1) {
            result += ", ";
        }
    }
    result += " }";
    return result;
}
function toReplace(specifier, value) {
    if (specifier === "%s") {
        return thingToString(value, 2);
    }
    if (specifier === "%d") {
        if (typeof value === "bigint") {
            return value + "n";
        }
        return Number(value).toString();
    }
    if (specifier === "%i") {
        if (typeof value === "bigint") {
            return value + "n";
        }
        return parseInt(value).toString();
    }
    if (specifier === "%f") {
        return parseFloat(value).toString();
    }
    if (specifier === "%j") {
        return JSON.stringify(value, circularRemover());
    }
    if (specifier === "%o" || specifier === "%O") {
        return thingToString(value);
    }
    if (specifier === "%c") {
        return "";
    }
    return "";
}
export function format(input, ...args) {
    const replacement = [];
    const regex = /%(s|d|i|f|j|o|O|c)/g;
    let i = 0;
    let arr = null;
    while ((arr = regex.exec(input)) !== null && i < args.length) {
        replacement.push([arr["index"], toReplace(arr[0], args[i])]);
        i++;
    }
    let result = "";
    let last = 0;
    for (let i = 0; i < replacement.length; i++) {
        const item = replacement[i];
        result += input.slice(last, item[0]);
        result += item[1];
        last = item[0] + 2;
    }
    result += input.slice(last);
    return result;
}
export function inherits(ctor, superCtor) {
    if (ctor === undefined || ctor === null) {
        throw new ERR_INVALID_ARG_TYPE("ctor", "Function", ctor);
    }
    if (superCtor === undefined || superCtor === null) {
        throw new ERR_INVALID_ARG_TYPE("superCtor", "Function", superCtor);
    }
    if (superCtor.prototype === undefined) {
        throw new ERR_INVALID_ARG_TYPE("superCtor.prototype", "Object", superCtor.prototype);
    }
    Object.defineProperty(ctor, "super_", {
        value: superCtor,
        writable: true,
        configurable: true,
    });
    Object.setPrototypeOf(ctor.prototype, superCtor.prototype);
}
import { _TextDecoder, _TextEncoder } from "./_utils.ts";
export const TextDecoder = _TextDecoder;
export const TextEncoder = _TextEncoder;
export default {
    inspect,
    isArray,
    isBoolean,
    isNull,
    isNullOrUndefined,
    isNumber,
    isString,
    isSymbol,
    isUndefined,
    isObject,
    isError,
    isFunction,
    isRegExp,
    isPrimitive,
    getSystemErrorName,
    deprecate,
    callbackify,
    promisify,
    inherits,
    types,
    TextDecoder,
    TextEncoder,
};
//# sourceMappingURL=data:application/json;base64,