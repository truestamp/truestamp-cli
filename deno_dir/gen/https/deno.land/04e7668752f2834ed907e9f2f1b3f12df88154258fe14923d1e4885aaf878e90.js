import { Type } from "../type.ts";
import { InvalidTypeError } from "../../flags/_errors.ts";
/** Enum type. Allows only provided values. */ export class EnumType extends Type {
    allowedValues;
    constructor(values){
        super();
        this.allowedValues = Array.isArray(values) ? values : Object.values(values);
    }
    parse(type) {
        for (const value of this.allowedValues){
            if (value.toString() === type.value) {
                return value;
            }
        }
        throw new InvalidTypeError(type, this.allowedValues.slice());
    }
    values() {
        return this.allowedValues.slice();
    }
    complete() {
        return this.values();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvY2xpZmZ5QHYwLjI0LjIvY29tbWFuZC90eXBlcy9lbnVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tIFwiLi4vdHlwZS50c1wiO1xuaW1wb3J0IHR5cGUgeyBJVHlwZUluZm8gfSBmcm9tIFwiLi4vdHlwZXMudHNcIjtcbmltcG9ydCB7IEludmFsaWRUeXBlRXJyb3IgfSBmcm9tIFwiLi4vLi4vZmxhZ3MvX2Vycm9ycy50c1wiO1xuXG4vKiogRW51bSB0eXBlLiBBbGxvd3Mgb25seSBwcm92aWRlZCB2YWx1ZXMuICovXG5leHBvcnQgY2xhc3MgRW51bVR5cGU8VCBleHRlbmRzIHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4+IGV4dGVuZHMgVHlwZTxUPiB7XG4gIHByaXZhdGUgcmVhZG9ubHkgYWxsb3dlZFZhbHVlczogUmVhZG9ubHlBcnJheTxUPjtcblxuICBjb25zdHJ1Y3Rvcih2YWx1ZXM6IFJlYWRvbmx5QXJyYXk8VD4gfCBSZWNvcmQ8c3RyaW5nLCBUPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5hbGxvd2VkVmFsdWVzID0gQXJyYXkuaXNBcnJheSh2YWx1ZXMpID8gdmFsdWVzIDogT2JqZWN0LnZhbHVlcyh2YWx1ZXMpO1xuICB9XG5cbiAgcHVibGljIHBhcnNlKHR5cGU6IElUeXBlSW5mbyk6IFQge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5hbGxvd2VkVmFsdWVzKSB7XG4gICAgICBpZiAodmFsdWUudG9TdHJpbmcoKSA9PT0gdHlwZS52YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IEludmFsaWRUeXBlRXJyb3IodHlwZSwgdGhpcy5hbGxvd2VkVmFsdWVzLnNsaWNlKCkpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIHZhbHVlcygpOiBBcnJheTxUPiB7XG4gICAgcmV0dXJuIHRoaXMuYWxsb3dlZFZhbHVlcy5zbGljZSgpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGNvbXBsZXRlKCk6IEFycmF5PFQ+IHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZXMoKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsSUFBSSxRQUFRLFlBQVksQ0FBQztBQUVsQyxTQUFTLGdCQUFnQixRQUFRLHdCQUF3QixDQUFDO0FBRTFELDhDQUE4QyxDQUM5QyxPQUFPLE1BQU0sUUFBUSxTQUE4QyxJQUFJO0lBQ3JFLEFBQWlCLGFBQWEsQ0FBbUI7SUFFakQsWUFBWSxNQUE0QyxDQUFFO1FBQ3hELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdFO0lBRUQsQUFBTyxLQUFLLENBQUMsSUFBZSxFQUFLO1FBQy9CLEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBRTtZQUN0QyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNuQyxPQUFPLEtBQUssQ0FBQzthQUNkO1NBQ0Y7UUFFRCxNQUFNLElBQUksZ0JBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztLQUM5RDtJQUVELEFBQWdCLE1BQU0sR0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDbkM7SUFFRCxBQUFnQixRQUFRLEdBQWE7UUFDbkMsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDdEI7Q0FDRiJ9