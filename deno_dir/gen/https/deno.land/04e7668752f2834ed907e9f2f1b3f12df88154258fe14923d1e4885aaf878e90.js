import { Type } from "../type.ts";
import { InvalidTypeError } from "../../flags/_errors.ts";
export class EnumType extends Type {
    allowedValues;
    constructor(values) {
        super();
        this.allowedValues = Array.isArray(values) ? values : Object.values(values);
    }
    parse(type) {
        for (const value of this.allowedValues) {
            if (value.toString() === type.value) {
                return value;
            }
        }
        throw new InvalidTypeError(type, this.allowedValues.slice());
    }
    values() {
        return this.allowedValues.slice();
    }
    complete() {
        return this.values();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImVudW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFlBQVksQ0FBQztBQUVsQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUcxRCxNQUFNLE9BQU8sUUFBOEMsU0FBUSxJQUFPO0lBQ3ZELGFBQWEsQ0FBbUI7SUFFakQsWUFBWSxNQUE0QztRQUN0RCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBZTtRQUMxQixLQUFLLE1BQU0sS0FBSyxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEMsSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDbkMsT0FBTyxLQUFLLENBQUM7YUFDZDtTQUNGO1FBRUQsTUFBTSxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVlLE1BQU07UUFDcEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFZSxRQUFRO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tIFwiLi4vdHlwZS50c1wiO1xuaW1wb3J0IHR5cGUgeyBJVHlwZUluZm8gfSBmcm9tIFwiLi4vdHlwZXMudHNcIjtcbmltcG9ydCB7IEludmFsaWRUeXBlRXJyb3IgfSBmcm9tIFwiLi4vLi4vZmxhZ3MvX2Vycm9ycy50c1wiO1xuXG4vKiogRW51bSB0eXBlLiBBbGxvd3Mgb25seSBwcm92aWRlZCB2YWx1ZXMuICovXG5leHBvcnQgY2xhc3MgRW51bVR5cGU8VCBleHRlbmRzIHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4+IGV4dGVuZHMgVHlwZTxUPiB7XG4gIHByaXZhdGUgcmVhZG9ubHkgYWxsb3dlZFZhbHVlczogUmVhZG9ubHlBcnJheTxUPjtcblxuICBjb25zdHJ1Y3Rvcih2YWx1ZXM6IFJlYWRvbmx5QXJyYXk8VD4gfCBSZWNvcmQ8c3RyaW5nLCBUPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5hbGxvd2VkVmFsdWVzID0gQXJyYXkuaXNBcnJheSh2YWx1ZXMpID8gdmFsdWVzIDogT2JqZWN0LnZhbHVlcyh2YWx1ZXMpO1xuICB9XG5cbiAgcHVibGljIHBhcnNlKHR5cGU6IElUeXBlSW5mbyk6IFQge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5hbGxvd2VkVmFsdWVzKSB7XG4gICAgICBpZiAodmFsdWUudG9TdHJpbmcoKSA9PT0gdHlwZS52YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IEludmFsaWRUeXBlRXJyb3IodHlwZSwgdGhpcy5hbGxvd2VkVmFsdWVzLnNsaWNlKCkpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIHZhbHVlcygpOiBBcnJheTxUPiB7XG4gICAgcmV0dXJuIHRoaXMuYWxsb3dlZFZhbHVlcy5zbGljZSgpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGNvbXBsZXRlKCk6IEFycmF5PFQ+IHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZXMoKTtcbiAgfVxufVxuIl19