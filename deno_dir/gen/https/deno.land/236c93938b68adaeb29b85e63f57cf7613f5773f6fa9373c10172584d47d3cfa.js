import { getStr } from "./wasm.ts";
import { Status } from "./constants.ts";
export class SqliteError extends Error {
    constructor(context, code) {
        let message;
        let status;
        if (typeof context === "string") {
            message = context;
            status = Status.Unknown;
        }
        else {
            message = getStr(context, context.get_sqlite_error_str());
            status = context.get_status();
        }
        super(message);
        this.code = code ?? status;
        this.name = "SqliteError";
    }
    code;
    get codeName() {
        return Status[this.code];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ25DLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU14QyxNQUFNLE9BQU8sV0FBWSxTQUFRLEtBQUs7SUFVcEMsWUFBWSxPQUFzQixFQUFFLElBQWE7UUFDL0MsSUFBSSxPQUFPLENBQUM7UUFDWixJQUFJLE1BQU0sQ0FBQztRQUNYLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQy9CLE9BQU8sR0FBRyxPQUFPLENBQUM7WUFDbEIsTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7U0FDekI7YUFBTTtZQUNMLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLENBQUM7WUFDMUQsTUFBTSxHQUFHLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUMvQjtRQUNELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxJQUFJLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBYUQsSUFBSSxDQUFTO0lBU2IsSUFBSSxRQUFRO1FBQ1YsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBd0IsQ0FBQztJQUNsRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYXNtIH0gZnJvbSBcIi4uL2J1aWxkL3NxbGl0ZS5qc1wiO1xuaW1wb3J0IHsgZ2V0U3RyIH0gZnJvbSBcIi4vd2FzbS50c1wiO1xuaW1wb3J0IHsgU3RhdHVzIH0gZnJvbSBcIi4vY29uc3RhbnRzLnRzXCI7XG5cbi8qKlxuICogRXJyb3JzIHdoaWNoIGNhbiBiZSB0aHJvd24gd2hpbGUgaW50ZXJhY3Rpbmcgd2l0aFxuICogYSBkYXRhYmFzZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNxbGl0ZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAvKipcbiAgICogRXh0ZW5zaW9uIG92ZXIgdGhlIHN0YW5kYXJkIEpTIEVycm9yIG9iamVjdFxuICAgKiB0byBhbHNvIGNvbnRhaW4gY2xhc3MgbWVtYmVycyBmb3IgZXJyb3IgY29kZVxuICAgKiBhbmQgZXJyb3IgY29kZSBuYW1lLlxuICAgKlxuICAgKiBJbnN0YW5jZXMgb2YgdGhpcyBjbGFzcyBzaG91bGQgbm90IGJlIGNvbnN0cnVjdGVkXG4gICAqIGRpcmVjdGx5IGFuZCBzaG91bGQgb25seSBiZSBvYnRhaW5lZFxuICAgKiBmcm9tIGV4Y2VwdGlvbnMgcmFpc2VkIGluIHRoaXMgbW9kdWxlLlxuICAgKi9cbiAgY29uc3RydWN0b3IoY29udGV4dDogV2FzbSB8IHN0cmluZywgY29kZT86IFN0YXR1cykge1xuICAgIGxldCBtZXNzYWdlO1xuICAgIGxldCBzdGF0dXM7XG4gICAgaWYgKHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtZXNzYWdlID0gY29udGV4dDtcbiAgICAgIHN0YXR1cyA9IFN0YXR1cy5Vbmtub3duO1xuICAgIH0gZWxzZSB7XG4gICAgICBtZXNzYWdlID0gZ2V0U3RyKGNvbnRleHQsIGNvbnRleHQuZ2V0X3NxbGl0ZV9lcnJvcl9zdHIoKSk7XG4gICAgICBzdGF0dXMgPSBjb250ZXh0LmdldF9zdGF0dXMoKTtcbiAgICB9XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5jb2RlID0gY29kZSA/PyBzdGF0dXM7XG4gICAgdGhpcy5uYW1lID0gXCJTcWxpdGVFcnJvclwiO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBTUUxpdGUgc3RhdHVzIGNvZGUgd2hpY2ggY2F1c2VkIHRoaXMgZXJyb3IuXG4gICAqXG4gICAqIEVycm9ycyB0aGF0IG9yaWdpbmF0ZSBpbiB0aGUgSmF2YVNjcmlwdCBwYXJ0IG9mXG4gICAqIHRoZSBsaWJyYXJ5IHdpbGwgbm90IGhhdmUgYW4gYXNzb2NpYXRlZCBzdGF0dXNcbiAgICogY29kZS4gRm9yIHRoZXNlIGVycm9ycywgdGhlIGNvZGUgd2lsbCBiZVxuICAgKiBgU3RhdHVzLlVua25vd25gLlxuICAgKlxuICAgKiBUaGVzZSBjb2RlcyBhcmUgYWNjZXNzaWJsZSB2aWFcbiAgICogdGhlIGV4cG9ydGVkIGBTdGF0dXNgIG9iamVjdC5cbiAgICovXG4gIGNvZGU6IFN0YXR1cztcblxuICAvKipcbiAgICogS2V5IG9mIGNvZGUgaW4gZXhwb3J0ZWQgYHN0YXR1c2BcbiAgICogb2JqZWN0LlxuICAgKlxuICAgKiBFLmcuIGlmIGBjb2RlYCBpcyBgMTlgLFxuICAgKiBgY29kZU5hbWVgIHdvdWxkIGJlIGBTcWxpdGVDb25zdHJhaW50YC5cbiAgICovXG4gIGdldCBjb2RlTmFtZSgpOiBrZXlvZiB0eXBlb2YgU3RhdHVzIHtcbiAgICByZXR1cm4gU3RhdHVzW3RoaXMuY29kZV0gYXMga2V5b2YgdHlwZW9mIFN0YXR1cztcbiAgfVxufVxuIl19